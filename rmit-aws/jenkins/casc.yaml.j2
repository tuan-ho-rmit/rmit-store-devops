jenkins:
  systemMessage: "RMIT Jenkins (auto-configured via JCasC)"
  numExecutors: 2
  mode: NORMAL

  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "{{ jenkins_admin_user }}"
          password: "{{ jenkins_admin_password }}"
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false

  globalNodeProperties:
    - envVars:
        env:
          - key: "DH_NS"
            value: "{{ dockerhub_user }}"
          - key: "BASE_URL"
            value: "{{ base_url }}"
          - key: "MONGO_URI"
            value: "{{ mongo_uri }}"
          - key: "STAGING_HOST"
            value: "{{ (staging_host if staging_host|default('')|length > 0 else ('rmit-staging.' ~ (base_url | regex_replace('^https?://','') | regex_replace('/.*$','') | replace('.','-')) ~ '.nip.io')) }}"
          - key: "PROD_HOST"
            value: "{{ (prod_host if prod_host|default('')|length > 0 else ('rmit-prod.' ~ (base_url | regex_replace('^https?://','') | regex_replace('/.*$','') | replace('.','-')) ~ '.nip.io')) }}"

unclassified:
  location:
    url: "{{ jenkins_url_hint }}"
  mailer:
    smtpHost: "{{ smtp_smarthost | default('') | regex_replace(':.*$','') }}"
    smtpPort: "{{ (smtp_smarthost | default('') | regex_search(':(\\d+)$') or ['','25'])[1] }}"
    useSsl: false
    useTls: true
    authentication:
      username: "{{ smtp_username | default('') }}"
      password: "{{ smtp_password | default('') }}"
    charset: "UTF-8"
    replyToAddress: "{{ smtp_from | default('') }}"
    from: "{{ smtp_from | default('') }}"

credentials:
  system:
    domainCredentials:
      - credentials:
          - usernamePassword:
              id: "dockerhub"
              description: "Docker Hub credentials"
              username: "{{ dockerhub_user }}"
              password: "{{ dockerhub_pat }}"
              scope: GLOBAL
          - string:
              id: "github-token"
              description: "GitHub token"
              secret: "{{ github_token }}"
              scope: GLOBAL
          - file:
              id: "kubeconfig-master"
              description: "k3s kubeconfig"
              fileName: "kubeconfig.yaml"
              secretBytes: "{{ kubeconfig_b64 }}"
              scope: GLOBAL

jobs:
  - script: |
      pipelineJob('RMIT-Store') {
        description('CI/CD pipeline for RMIT Store')
        definition {
          cpsScm {
            lightweight(true)
            scm {
              git {
                remote {
                  url('{{ github_repo }}')
                  credentials('github-token')
                }
                branches('*/main')
              }
            }
            scriptPath('Jenkinsfile')
          }
        }
        triggers { githubPush() }
      }
  - script: |
      multibranchPipelineJob('RMIT-Store-PR') {
        displayName('RMIT-Store (PR CI)')
        branchSources {
          github {
            id('rmit-store-pr')
            repoOwner('{{ github_owner }}')
            repository('{{ github_repo | regex_replace('.*/','') }}')
            credentialsId('github-token')
          }
        }
        factory {
          workflowBranchProjectFactory {
            scriptPath('Jenkinsfile.pr')
          }
        }
        orphanedItemStrategy {
          discardOldItems {
            numToKeep(10)
          }
        }
      }
